{"version":3,"file":"static/js/609.cdc1994d.chunk.js","mappings":"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","sources":["components/ContactForm/ContactFormStyled.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactListItemStyled.js","components/ContactList/ContactListItem.jsx","components/ContactList/ContactListStyled.js","components/ContactList/ContactList.jsx","components/Filter/FilterStyled.js","components/Filter/Filter.jsx","Pages/ContactsPageStyled.js","Pages/ContactsPage.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Form = styled.form`\n    width: 400px;\n    height: 400px;\n    margin: 0 auto;\n\n    @media screen and (max-width: 768px) {\n      width: 320px;\n    }\n`\nexport const Input = styled.input`\n  width: 400px;\n  margin-bottom: 20px;\n  outline: none;\n  height: 30px;\n  font-size: 18px;\n  line-height: 27px;\n  border-top: none;\n  border-left: none;\n  border-right: none;\n  border-bottom: 0.5px, solid;\n  border-color: #e7eaf2;\n\n  :focus {\n    border-color: #0396FF;\n  }\n\n  @media screen and (max-width: 768px) {\n    width: 280px;\n    height: 32px;\n  }\n\n`;\n\nexport const Button = styled.button`\ndisplay: block;\n  width: 300px;\n  height: 50px;\n  margin-top: 10px;\n  margin-bottom: 10px;\n  margin-left: auto;\n  margin-right: auto;\n  box-sizing: border-box;\n  border-radius: 20px;\n  text-transform: uppercase;\n  font-size: 18px;\n  line-height: 27px;\n  letter-spacing: 0.1em;\n  background-color: #24cca7;\n  border-color: transparent;\n  outline: none;\n  color: white;\n  margin-top: 30px;\n  margin-bottom: 30px;\n  cursor: pointer;\n\n  :hover,\n  :focus {\n    border: 1px solid #24cca7;\n    color: #24cca7;\n    background-color: #ffffff;\n    transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n      color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  }\n  @media screen and (max-width: 768px) {\n    width: 280px;\n  }\n`\nexport const Text = styled.p`\nfont-size:25px;\ncolor: #fff;\n`","import { useDispatch, useSelector } from \"react-redux\";\nimport { getPhones } from \"redux/phoneSlice\";\nimport { addContacts } from 'redux/operations';\nimport { Form, Input, Button, Text } from \"./ContactFormStyled\";\n\nexport default function ContactForm(){\n  \n  const dispatch = useDispatch();\n  const phones = useSelector(getPhones);\n\n  const handleSubmit = e => {\n        e.preventDefault();\n        const form = e.target;\n        const name = form.elements.name.value;\n        const number = form.elements.number.value;\n        if(phones.some(phone => phone.name.toLowerCase() === name.toLowerCase())){\n          return alert(`${name} is already in contacts `)\n        }\n        dispatch(addContacts({name, number}));\n        form.reset();\n  };\n  return (\n          <Form onSubmit={handleSubmit}>\n          \n              <Text>Name</Text>\n              <Input\n                type=\"text\"\n                name=\"name\"\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                required\n              />\n              <Text>Number</Text>\n              <Input\n                type=\"tel\"\n                name=\"number\"\n                pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                required\n              />\n              <div>\n                <Button type=\"submit\">Add contact</Button>\n              </div>\n           \n          </Form>\n        )\n}\n","import styled from \"styled-components\";\n\nexport const Item = styled.li`\nlist-style: none;\n    display: flex;\n    align-items: center;\n    gap: 20px;\n    color: #fff;\n    font-size: larger;\n`\n\nexport const Button = styled.button`\nborder: none;\nbackground-color: transparent;\n`","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useDispatch } from 'react-redux';\nimport { deleteContacts } from \"redux/operations\";\nimport { Item, Button } from \"./ContactListItemStyled\";\nimport { BsXCircle } from \"react-icons/bs\";\n\n\n\nexport const ContactListItem = ({id, name, phone}) => {\n    const dispatch = useDispatch();\n    \n\n    return(\n        <Item>\n            {name}:{phone} \n            <Button type=\"button\" value={id} onClick = {() => dispatch(deleteContacts(id))}>\n            <BsXCircle size=\"20px\" />\n            </Button>\n            {/* <Button type=\"button\" value={id} onClick={openModal}>\n            <BsPencil size=\"20px\"/>\n            </Button>\n            {modal === true ? <ModalWindow openModal={openModal}  id={id}/> : ''} */}\n            \n        </Item>\n            \n    );\n};\nContactListItem.propTypes = {\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    phone: PropTypes.string.isRequired,\n};\n","import styled from \"styled-components\";\n\nexport const List = styled.ul`\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\nwidth: auto;\ngap: 15px;\n`","import { ContactListItem } from \"./ContactListItem\";\nimport { useSelector } from \"react-redux\";\nimport { getStatusFilter } from \"redux/filterSlice\";\nimport { getPhones } from \"redux/phoneSlice\";\nimport { List } from \"./ContactListStyled\";\n\n\n\nexport const ContactList = () => {\n    const contacts = useSelector(getPhones);\n    const filter = useSelector(getStatusFilter);\n\n    const filteredContacts = contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter)\n    );\n   \n    \n    return(\n        <List>\n            {filteredContacts.map(contact => {\n                const {name, number, id} = contact || {}\n                return <ContactListItem key = {id} name={name} phone={number} id={id}/>\n            })}\n        </List>\n    )\n}\n","import styled from \"styled-components\";\n\nexport const Box= styled.div`\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\n`\nexport const Text = styled.p`\nfont-size: 25px;\n`\nexport const Input = styled.input`\nwidth: 500px;\noutline: none;\nheight: 34px;\npadding-left: 55px;\nfont-size: 18px;\nline-height: 27px;\nborder-top: none;\nborder-left: none;\nborder-right: none;\nborder-bottom: 0.5px, solid;\nborder-color: #e7eaf2;\n\n:focus {\nborder-color: #0396FF;\n}\n\n::placeholder {\n    color: #e7eaf2;\n    text-align: left;\n  }\n\n@media screen and (max-width: 768px) {\n    width: 280px;\n    height: 32px;\n  }\n`","import React from \"react\";\nimport { useDispatch } from 'react-redux';\nimport { setStatusFilter } from \"redux/filterSlice\";\nimport { Box, Text, Input } from \"./FilterStyled\";\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const onChange = e => {\n    const filter = e.target.value;\n    dispatch(setStatusFilter(filter))\n    };\n\n\n  return(\n      <Box>\n        <Text> Find contacts by name</Text>\n        <Input type=\"text\" placeholder=\"Enter search name\" onChange = {onChange} />\n      </Box>\n  )\n}\n","import styled from \"styled-components\";\n\nexport const Title = styled.h1`\ntext-align: center;\n`\n\nexport const SecondTitle = styled.h2`\ntext-align: center;\nfont-size: 30px;\n`","import { getPhones } from \"redux/phoneSlice\";\nimport { useSelector } from 'react-redux';\nimport ContactForm from \"components/ContactForm/ContactForm\";\nimport { ContactList } from \"components/ContactList/ContactList\";\nimport { Filter } from \"components/Filter/Filter\"; \nimport { useDispatch} from \"react-redux\";\nimport { fetchContacts } from \"redux/operations\";\nimport { useEffect } from \"react\";\nimport { Title, SecondTitle } from \"./ContactsPageStyled\";\n\n\nexport default function ContactsPage(){\n  const contacts = useSelector(getPhones);\n  const dispatch = useDispatch();\n  \n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n \n\n    return (\n      <div\n        className=\"App\"\n      >\n       <div>\n        <Title>Phonebook</Title>\n        <ContactForm />\n       \n       </div>\n        {contacts.length>0 ? <SecondTitle>Contacts</SecondTitle> : <SecondTitle>There are no contacts</SecondTitle>}\n        {contacts.length>0 &&  <Filter />}\n        <ContactList />\n      </div>\n    );\n  \n  }"],"names":["Form","styled","Input","Button","Text","ContactForm","dispatch","useDispatch","phones","useSelector","getPhones","onSubmit","e","preventDefault","form","target","name","elements","value","number","some","phone","toLowerCase","alert","addContacts","reset","type","pattern","title","required","Item","ContactListItem","id","onClick","deleteContacts","size","List","ContactList","contacts","filter","getStatusFilter","filteredContacts","contact","includes","map","Box","Filter","placeholder","onChange","setStatusFilter","Title","SecondTitle","ContactsPage","useEffect","fetchContacts","className","length"],"sourceRoot":""}